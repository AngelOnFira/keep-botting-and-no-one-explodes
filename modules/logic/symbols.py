from enum import Enum

# Module organized as follows:

###########
###0###1###
###########
###2###3###
###########

class SymbolType(Enum):
    COPYRIGHT_SIGN,
    BLACK_STAR,
    WHITE_STAR,
    ARABIC_LETTER_TEH_WITH_RING,
    CYRILLIC_CAPITAL_LETTER_ZHE_WITH_DESCENDER,
    GREEK_CAPITAL_LETTER_OMEGA,
    CYRILLIC_CAPITAL_LETTER_IOTIFIED_BIG_YUS,
    CYRILLIC_CAPITAL_LETTER_OMEGA_WITH_TITLO,
    COPTIC_SYMBOL_KAI,
    #COPTIC_SMALL_LETTER_GANGIA,
    CYRILLIC_SMALL_LETTER_BE,
    GREEK_LETTER_ARCHAIC_KOPPA,
    CYRILLIC_CAPITAL_LETTER_LITTLE_YUS,
    LATIN_SMALL_LETTER_AE,
    CYRILLIC_CAPITAL_LETTER_KOMI_DZJE,
    CYRILLIC_CAPITAL_LETTER_E_WITH_DIAERESIS,
    #COMBINING_CYRILLIC_HUNDRED_THOUSANDS_SIGN,
    CYRILLIC_CAPITAL_LETTER_SHORT_I_WITH_TAIL,
    CYRILLIC_CAPITAL_LETTER_KSI,
    INVERTED_QUESTION_MARK,
    PILCROW_SIGN,
    GREEK_CAPITAL_DOTTED_LUNATE_SIGMA_SYMBOL,
    GREEK_CAPITAL_REVERSED_DOTTED_LUNATE_SIGMA_SYMBOL,
    GREEK_CAPITAL_LETTER_PSI,
    #CYRILLIC_CAPITAL_LETTER_BIG_YUS,
    CYRILLIC_CAPITAL_LETTER_ABKHASIAN_HA,
    CYRILLIC_THOUSANDS_SIGN,
    GREEK_SMALL_LETTER_KOPPA,
    #GREEK_SMALL_LETTER_ZETA,
    LATIN_SMALL_LETTER_LAMBDA_WITH_STROKE,
    CYRILLIC_CAPITAL_LETTER_YAT

solutionSets = [
    [ # 1
        GREEK_SMALL_LETTER_KOPPA,
        CYRILLIC_CAPITAL_LETTER_LITTLE_YUS,
        LATIN_SMALL_LETTER_LAMBDA_WITH_STROKE,
        GREEK_LETTER_ARCHAIC_KOPPA,
        CYRILLIC_CAPITAL_LETTER_IOTIFIED_BIG_YUS,
        COPTIC_SYMBOL_KAI,
        GREEK_CAPITAL_REVERSED_DOTTED_LUNATE_SIGMA_SYMBOL
    ],
    [ # 2
        CYRILLIC_CAPITAL_LETTER_E_WITH_DIAERESIS,
        GREEK_SMALL_LETTER_KOPPA,
        GREEK_CAPITAL_REVERSED_DOTTED_LUNATE_SIGMA_SYMBOL,
        CYRILLIC_CAPITAL_LETTER_ABKHASIAN_HA,
        WHITE_STAR,
        COPTIC_SYMBOL_KAI,
        INVERTED_QUESTION_MARK
    ],
    [ # 3
        COPYRIGHT_SIGN,
        CYRILLIC_CAPITAL_LETTER_OMEGA_WITH_TITLO,
        CYRILLIC_CAPITAL_LETTER_ABKHASIAN_HA,
        CYRILLIC_CAPITAL_LETTER_ZHE_WITH_DESCENDER,
        CYRILLIC_CAPITAL_LETTER_KOMI_DZJE,
        LATIN_SMALL_LETTER_LAMBDA_WITH_STROKE,
        WHITE_STAR
    ],
    [ # 4
        CYRILLIC_SMALL_LETTER_BE,
        PILCROW_SIGN,
        CYRILLIC_CAPITAL_LETTER_YAT,
        CYRILLIC_CAPITAL_LETTER_IOTIFIED_BIG_YUS,
        CYRILLIC_CAPITAL_LETTER_ZHE_WITH_DESCENDER,
        INVERTED_QUESTION_MARK,
        ARABIC_LETTER_TEH_WITH_RING
    ],
    [ # 5
        GREEK_CAPITAL_LETTER_PSI,
        ARABIC_LETTER_TEH_WITH_RING,
        CYRILLIC_CAPITAL_LETTER_YAT,
        GREEK_CAPITAL_DOTTED_LUNATE_SIGMA_SYMBOL,
        PILCROW_SIGN,
        CYRILLIC_CAPITAL_LETTER_KSI,
        BLACK_STAR
    ],
    [ # 6
        CYRILLIC_SMALL_LETTER_BE,
        CYRILLIC_CAPITAL_LETTER_E_WITH_DIAERESIS,
        CYRILLIC_THOUSANDS_SIGN,
        LATIN_SMALL_LETTER_AE,
        GREEK_CAPITAL_LETTER_PSI,
        CYRILLIC_CAPITAL_LETTER_SHORT_I_WITH_TAIL,
        GREEK_CAPITAL_LETTER_OMEGA
    ]
]

NUM_SOLUTIONS = len(solutionSets)

class Symbols:
    ### expects 4 elem array
    def __init__(symbols_on_bomb):
        solution = []
        for i in range(NUM_SOLUTIONS):
            if all(symbol in symbols_on_bomb for symbol in solutionSets[i]):
                for symbol in solutionSets[i]:
                    if symbol in symbols_on_bomb:
                        solution.append(symbol)
        return solution
